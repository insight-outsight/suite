<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>com.selffun</groupId>
  	<!-- 改groupId和artifactId -->
  	<artifactId>suite</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  	<packaging>war</packaging>
  	<name>suite-webapp</name>
  	<description>maven web project 模板,各式各样的。</description>
  
	<properties>
		<build.jdk.version>1.7</build.jdk.version>
		<build.compiler.encoding>UTF-8</build.compiler.encoding>	
		<build.resourceEncoding>UTF-8</build.resourceEncoding>
		<package.dir>${basedir}/target</package.dir>
		<package.name>suite-pub</package.name>
		<spring.version>3.1.1.RELEASE</spring.version>
		<cxf.version>2.4.2</cxf.version>				
		<!-- 最好移至env.properties ?? how-->
        <tomcat.manager.url>http://192.168.0.52:8080/manager/text</tomcat.manager.url> 
        <tomcat.manager.username>tomcat7ok</tomcat.manager.username>  
        <tomcat.manager.password>tomcat7ok</tomcat.manager.password>          
	</properties>
	
	
	<dependencies>
	
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_3.0_spec</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.24</version>
		</dependency>
		
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp</artifactId>
			<version>0.8.0.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.0.1</version>
		</dependency>	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>spring-core</artifactId>
      		<version>${spring.version}</version>
      		<scope>compile</scope>
    	</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
    	<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>spring-jdbc</artifactId>
      		<version>${spring.version}</version>
      		<scope>compile</scope>
    	</dependency>
    	<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>spring-test</artifactId>
      		<version>${spring.version}</version>
      		<scope>compile</scope>
    	</dependency>
		<!-- spring transactionManager need cglib.jar, nodep is for avoding conflict -->
    	<dependency>
      		<groupId>cglib</groupId>
      		<artifactId>cglib-nodep</artifactId>
      		<version>2.2.2</version>
      		<scope>compile</scope>
    	</dependency>
    	<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.0.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-bundle</artifactId>
			<version>${cxf.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-servlet_3.0_spec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- reserve
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.7.0</version>
		</dependency>
		 -->
		<dependency>
    		<groupId>org.apache.hbase</groupId>
    		<artifactId>hbase-client</artifactId>
    		<version>0.98.2-hadoop2</version>
		</dependency> 
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils-core</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.4.1</version>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>commons-el</groupId>
			<artifactId>commons-el</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
    		<groupId>com.github.stephenc.high-scale-lib</groupId>
    		<artifactId>high-scale-lib</artifactId>
    		<version>1.1.4</version>
		</dependency>
		<dependency>
    		<groupId>org.jamon</groupId>
    		<artifactId>jamon-runtime</artifactId>
    		<version>2.4.1</version>
		</dependency>
		<dependency>
    		<groupId>org.apache.thrift</groupId>
    		<artifactId>libthrift</artifactId>
    		<version>0.9.1</version>
		</dependency>
		<dependency>
    		<groupId>org.glassfish.grizzly</groupId>
    		<artifactId>grizzly-framework</artifactId>
    		<version>2.3.12</version>
		</dependency>
		<dependency>
    		<groupId>org.glassfish.grizzly</groupId>
    		<artifactId>grizzly-http</artifactId>
    		<version>2.3.12</version>
		</dependency>
		<dependency>
    		<groupId>org.glassfish.grizzly</groupId>
    		<artifactId>grizzly-http-server</artifactId>
    		<version>2.3.12</version>
		</dependency>
		<dependency>
    		<groupId>org.glassfish.grizzly</groupId>
    		<artifactId>grizzly-http-servlet</artifactId>
    		<version>2.3.12</version>
		</dependency>
		<dependency>
    		<groupId>org.glassfish.grizzly</groupId>
    		<artifactId>grizzly-rcm</artifactId>
    		<version>2.3.4</version>
		</dependency>
		
	</dependencies>
	

	<build>
		<finalName>${package.name}</finalName>
		<filters>
			<filter>${env.properties.file}</filter>
		</filters>
		<resources>
			<resource>
				<!-- Specifies the directory structure to place the set of resources from a build. 
				Target path defaults to the base directory. A commonly specified target path for resources 
				that will be packaged in a JAR is META-INF. <resource>标签使用的是<build> -> <plugins> -> <plugin>
				中配置的maven-resources-plugin插件，如果没有出现这个配置,作为核心内置插件，mave也n会自动加载。
				例如：
				<targetPath>m</targetPath>
				表示${basedir}/src/main/resources文件被拷贝到APP_ROOT\WEB-INF\classes\m下
				省略<targetPath>标签表示${basedir}/src/main/resources文件被拷贝到APP_ROOT\WEB-INF\classes下
				-->
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<!-- 如果冲突，exludes优先于includes -->

<!-- 				<includes>
					<include>viewer/*.*</include>
					<include>**/*.*</include>
				</includes>	 -->
				<!-- 不再一一include，剩余 src/main/resources一切目录文件，交由maven-war-plugin处理 -->
				
				<!--
				<excludes>
					<exclude>**/exclude.xml</exclude>
					 
					<exclude>**/*</exclude>
				</excludes>							
				-->
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>${basedir}/src/test/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${build.resourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
				    <verbose>true</verbose>        			
          			<!--
          			fork为true会导致WEB-INF/classes下出现javac.bat和org.codehaus.plexus.compiler.javac.JavacCompiler6780378540917534892arguments文件
          			<fork>true</fork>
          			<executable> <path-to-javac> </executable>
          			-->				
					<compilerVersion>${build.jdk.version}</compilerVersion>
					<source>${build.jdk.version}</source>
					<target>${build.jdk.version}</target>
					<encoding>${build.resourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<!-- 拷贝资源文件时防止乱码 -->
					<resourceEncoding>${build.resourceEncoding}</resourceEncoding>
<!-- 					<webResources>
						<resource>
							<directory>src/main/resources/</directory>
							<excludes>
                				<exclude>**/*.*</exclude>
              				</excludes>
							<filtering>true</filtering> 
							<targetPath>WEB-INF/classes/f</targetPath>
						</resource>
							||开始，这个片段意为对src/main/webapp/WEB-INF的web.xml执行过滤，即替换${}内容
							<resource>
								<directory>src/main/webapp/WEB-INF</directory>
								<includes>
									<include>web.xml</include>
								</includes>
								<filtering>true</filtering> 
								<targetPath>WEB-INF</targetPath>
							</resource>
							||结束
					</webResources>-->
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<webappDirectory>${package.dir}/${package.name}</webappDirectory>
					<!--  未测试以下标签
					<warName>blah</warName> 
					<finalName>${project.build.finalName}</finalName> 
					<packagingExcludes>**/spy.properties,scripts/ext4/docs/**,logs/**</packagingExcludes>
					<warSourceExcludes>scripts/ext4/docs/**,logs/**</warSourceExcludes>  
					<workDirectory>${project.build.directory}/work</workDirectory>  
					<useCache>false</useCache>  
					<archive>  
     						<addMavenDescriptor>true</addMavenDescriptor>  
					</archive>  
					<webXml>${basedir}/WebContent/WEB-INF/web.xml</webXml>  
					<ignoreWebxml>false</ignoreWebxml>
					-->
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.codehaus.cargo</groupId>  
                <artifactId>cargo-maven2-plugin</artifactId>  
                <version>1.4.4</version>
                <!--可选 
               	<executions>  
                  <execution>  
                     <id>verify-deploy</id>  
                     <phase>pre-integration-test</phase>  
                     <goals>  
                         <goal>deployer-redeploy</goal>  
                     </goals>  
                  </execution>  
                </executions>
                --> 
                <configuration>  
                   <container>  
                       <containerId>tomcat7x</containerId>  
                       <type>remote</type>  
                   </container>  
                   <configuration> 
                       <!-- runtime意思是寻找一个正在运行tomcat实例，进行热部署 -->
                       <type>runtime</type>  
                       <properties>
<!--                        	   <cargo.protocol>http</cargo.protocol>
                       	   <cargo.hostname>${tomcat.host}</cargo.hostname>  
                		   <cargo.servlet.port>${tomcat.port}</cargo.servlet.port>  
                		   <cargo.jvmargs>-server -Xmx256m -Xms256m</cargo.jvmargs> -->
                       	   <cargo.remote.uri>${tomcat.manager.url}</cargo.remote.uri>
                           <cargo.remote.username>${tomcat.manager.username}</cargo.remote.username>  
                           <cargo.remote.password>${tomcat.manager.password}</cargo.remote.password>  
                       </properties>  
                   </configuration>  

                       <deployables>  
                         <deployable>  
<!--                               <groupId>${groupId}</groupId>  
                             <artifactId>${artifactId}</artifactId>  -->
                             <type>war</type>  
                             <properties>  
              <!-- deployer是部署时的相关配置，这个context是用来声明工程部署后的上下文，也就是  
                                        主机地址后面的一级目录位置。这个设置在maven构建中还是很必要的。因为maven默认打出  
                                        的war包是工程名+版本号，部署时如果不设置这里的context，那上下文就变成了工程名+版本号  
                                        的形式。这会使访问变得很不方便。注意，即使你通过修改war插件中的warName也是不能达到这个  
                                        目的，因为cargo认定的默认war包名就是工程名+版本号的形式。也可以利用finalName来制定  -->
                               <context>bssession</context>  
                             </properties>  
                          </deployable>  
                        </deployables>  
                </configuration>  
            </plugin> 
            
            <!-- Alternative tomcat7-maven-plugin,支持tomcat8     	
			Context Goals
			This plugin provides goals that perform various tasks on your project's context once deployed on Tomcat:

			    Redeploying a WAR project
			    Undeploying a WAR project
			    Starting a WAR project
			    Stopping a WAR project
			    Listing session statistics

			These are described in more detail below.
			
			Redeploying a WAR project
			
			The goals required to redeploy a WAR project depend upon how it was deployed:
			
			    To redeploy a WAR project deployed by tomcat:deploy you can type:	
			    mvn package tomcat6/7:redeploy
			
			    To redeploy a WAR project deployed by tomcat:exploded you can type:	
			    mvn war:exploded tomcat6/7:redeploy
			
			    To redeploy a WAR project deployed by tomcat:inplace you can type:	
			    mvn war:inplace tomcat6/7:redeploy
			
			    To redeploy a context.xml file deployed by tomcat:deploy you can type:		
			    mvn tomcat6/7:redeploy
			
			    Note: Depending on the docBase specified in the context.xml you may also need to call war:exploded or war:inplace as above.
			
			Undeploying a WAR project	
				To undeploy a WAR from Tomcat you can type:	
				mvn tomcat6/7:undeploy	
			Starting a WAR project	
				To start a WAR in Tomcat you can type:	
				mvn tomcat6:start	
			Stopping a WAR project
			
				To stop a WAR in Tomcat you can type:
				mvn tomcat6:stop
			
			Listing session statistics
			
			To list the session statistics for a deployed WAR project you can type:
			
			mvn tomcat6:sessions
	        
	        Ref:http://tomcat.apache.org/maven-plugin-trunk/context-goals.html
            -->
            <plugin>
          		<groupId>org.apache.tomcat.maven</groupId>
          		<artifactId>tomcat7-maven-plugin</artifactId>
          		<version>2.3-SNAPSHOT</version>
          		<configuration>
          			<!-- url也必须有/text,否则也上传不了war包 -->
                    <url>http://localhost:8080/manager/text</url>  
                    <username>username4</username>  
                    <password>password4</password>  
<!--                     <path>/${project.artifactId}</path>  --> 
                    <path>/payhistory</path>  
                </configuration> 
        	</plugin>
        	
		</plugins>
		
		    		
        	
		<!-- 		
		<pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-compiler-plugin</artifactId>
                                        <versionRange>[2.4.0,)</versionRange>
                                        <goals>
                                        	<goal>compile</goal>
                                        	<goal>testCompile</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore>testCompile</ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-resources-plugin</artifactId>
                                        <versionRange>[2.1.1,)</versionRange>
                                        <goals>
                                        	<goal>testResources</goal>
                                        	<goal>resources</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>

                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement> 
        -->
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.0.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>pmd</report>
							<report>cpd</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	
	<pluginRepositories>
	  <pluginRepository>
	    <id>codehaus-snapshots</id>
	    <name>Codehaus Snapshots</name>
	    <url>http://nexus.codehaus.org/snapshots/</url>
	    <releases>
	      <enabled>false</enabled>
	      <updatePolicy>always</updatePolicy>
	    </releases>
	    <snapshots>
	      <enabled>true</enabled>
	      <updatePolicy>always</updatePolicy>
	    </snapshots>
	  </pluginRepository>
	</pluginRepositories>
	
	<repositories>
		<repository>
		  <id>codehaus-snapshots</id>
		  <name>Codehaus Snapshots</name>
		  <url>http://nexus.codehaus.org/snapshots/</url>
		  <releases>
		    <enabled>true</enabled>
		    <updatePolicy>always</updatePolicy>
		  </releases>
		  <snapshots>
		    <enabled>true</enabled>
		    <updatePolicy>always</updatePolicy>
		  </snapshots>
		</repository>
	  	<!-- QueryDSL Repository Address -->
		<repository>
			<id>msource</id>
			<url>http://source.mysema.com/maven2/releases/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<!-- Spring Release Repository -->
		<repository>
			<id>spring-release</id>
			<name>Spring RELEASE Repository</name>
			<url>http://repo.springsource.org/libs-release</url>
		</repository>
		<!-- BoneCP Repository -->
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<id>bonecp-repo</id>
			<name>BoneCP Repository</name>
			<url>http://jolbox.com/bonecp/downloads/maven</url>
		</repository>
		<repository> 
			<id>iRepos</id> 
			<name>ibiblio public Repository</name> 
			<url>http://files.couchbase.com/maven2/</url> 
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>
			<properties>
				<env.properties.file>${env.HOME}/env.properties</env.properties.file>
			</properties>
		</profile>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<env.properties.file>${env.HOMEDRIVE}${env.HOMEPATH}/env.properties</env.properties.file>
			</properties>
		</profile>
	</profiles>
	
	
</project>
